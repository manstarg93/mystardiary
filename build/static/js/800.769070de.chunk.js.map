{"version":3,"file":"static/js/800.769070de.chunk.js","mappings":"oLASaA,EAA0BC,EAAAA,GAAAA,IAAH,+WAK1B,SAAAC,GAAK,MAAoB,SAAhBA,EAAMC,MAAmBC,EAAAA,EAAAA,UAAsBA,EAAAA,EAAAA,KAAnD,IACM,SAAAF,GAAK,MAAoB,SAAhBA,EAAMC,MAAmBC,EAAAA,EAAAA,MAAkBA,EAAAA,EAAAA,SAA/C,IAUR,SAAAF,GAAK,MAAoB,SAAhBA,EAAMC,OAAoBC,EAAAA,EAAAA,IAA9B,IACM,SAAAF,GAAK,MAAoB,SAAhBA,EAAMC,MAAmBC,EAAAA,EAAAA,MAAkBA,EAAAA,EAAAA,IAA/C,IAIrBC,EAAaJ,EAAAA,GAAAA,OAAH,0LAOT,SAAAC,GAAK,MAAoB,SAAhBA,EAAMC,MAAmBC,EAAAA,EAAAA,UAAsBA,EAAAA,EAAAA,KAAnD,IACC,SAAAF,GAAK,MAAoB,SAAhBA,EAAMC,MAAoB,OAAQ,QAAtC,I,SCzBZG,EAA0C,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,SAASC,EAA6B,EAA7BA,KAAKC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,KAAKP,EAAW,EAAXA,MAEpF,OAEG,UAACH,EAAD,CAAyBG,MAAOA,EAAOM,QAASA,EAAhD,UACCD,GACA,SAACH,EAAD,CAAYF,MAAOA,EAAOO,KAAMA,EAAhC,SAAuCH,MAG1C,C,sHCnBYI,EAAiBV,EAAAA,GAAAA,IAAH,mJAUdW,EAAaX,EAAAA,GAAAA,MAAH,mEAEVG,EAAAA,EAAAA,WAIAS,EAAYZ,EAAAA,GAAAA,MAAH,sMACFG,EAAAA,EAAAA,SAIPA,EAAAA,EAAAA,OAOAU,EAAeb,EAAAA,GAAAA,SAAH,8LACLG,EAAAA,EAAAA,SAIXA,EAAAA,EAAAA,O,SCfIW,EAAwB,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,MAAMC,EAAuC,EAAvCA,KAAKP,EAAkC,EAAlCA,KAAKQ,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,SAElE,OAAQ,UAACT,EAAD,YACJ,UAACC,EAAD,CAAYS,QAASJ,EAArB,UAA4BD,EAA5B,SACA,SAACH,EAAD,CAAWO,SAAUA,EAAUV,KAAMA,EAAMQ,MAAOA,EAAOD,KAAMA,EAAME,SAAUA,MAEtF,EAEYG,EAA8B,SAAC,GAAmD,IAAlDN,EAAiD,EAAjDA,MAAMC,EAA2C,EAA3CA,KAAKM,EAAsC,EAAtCA,KAAKC,EAAiC,EAAjCA,KAAKN,EAA4B,EAA5BA,MAAMO,EAAsB,EAAtBA,QAAQL,EAAc,EAAdA,SAC5E,OACI,UAACT,EAAD,YACA,SAACC,EAAD,CAAYS,QAASJ,EAArB,SAA4BD,KAC5B,SAACF,EAAD,CAAcM,SAAUA,EAAUG,KAAMA,EAAMC,KAAMA,EAAMN,MAAOA,EAAOD,KAAMA,EAAME,SAAUM,MAGrG,C,0FCjCYC,EAAiBzB,EAAAA,GAAAA,IAAH,+HAGXG,EAAAA,EAAAA,O,SCMhB,EAL6B,SAAC,GAAoB,IAAnBI,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QACpC,OAAO,SAACiB,EAAD,CAAgBjB,QAASA,EAAzB,SAAmCD,GAEzC,C,8LCJYmB,EAAoB1B,EAAAA,GAAAA,KAAH,0KAOjB2B,EAAAA,EAAAA,QASAC,EAA+B5B,EAAAA,GAAAA,IAAH,qEAK5B6B,EAAuB7B,EAAAA,GAAAA,IAAH,iDAIpB8B,EAA8B9B,EAAAA,GAAAA,IAAH,0LAQ3B2B,EAAAA,EAAAA,Q,0DC9BAI,EAA2B/B,EAAAA,GAAAA,IAAH,mHAEb,SAAAC,GAAK,OAAIA,EAAM+B,QAAU7B,EAAAA,EAAAA,MAAkBA,EAAAA,EAAAA,GAAtC,IACd,SAAAF,GAAK,OAAIA,EAAMgC,QAAQC,OAAS,GAAK,MAAhC,IAOPC,EAAsBnC,EAAAA,GAAAA,GAAH,2DACnBG,EAAAA,EAAAA,O,SCFb,EAViD,SAAC,GAAwB,IAAvB8B,EAAsB,EAAtBA,QAASD,EAAa,EAAbA,QAGxD,OACI,SAACD,EAAD,CAA0BC,QAASA,EAASC,QAASA,EAArD,UACI,SAACE,EAAD,UAAsBF,KAGjC,EC+GD,EA9G+B,WAE3B,OAA0BG,EAAAA,EAAAA,UAAiB,IAA3C,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAiB,IAAvD,eAAOG,EAAP,KAAoBC,EAApB,KAEA,GAA8CJ,EAAAA,EAAAA,UAAiB,IAA/D,eAAOK,EAAP,KAAwBC,EAAxB,KACA,GAA8BN,EAAAA,EAAAA,WAAmB,GAAjD,eAAOJ,EAAP,KAAgBW,EAAhB,KAEOC,GAAaC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,KAAV,IAAjCH,UACAI,GAAeH,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,IAAV,IAAnCD,YAELE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAYPC,EAAO,yCAAG,WAAMC,GAAN,4EAEJX,IAEAQ,GAASI,EAAAA,EAAAA,IAAW,CAACD,KAClBP,IACCS,EAAAA,EAAAA,IAAgBT,EAAYU,IAAI,CAACH,KAGtCX,IACKe,EADK,kBAEFf,GAFE,CAGLW,IAGRH,GAASI,EAAAA,EAAAA,IAAWG,IACjBX,IACCS,EAAAA,EAAAA,IAAgBT,EAAYU,IAAIC,IAIpCT,EAAS,KACTU,GAAY,EAAD,gBAtBH,2CAAH,sDA0BPA,EAAc,SAAC5B,EAAkBC,GACnCU,EAAWX,GACXU,EAAmBT,EACtB,EAEK4B,EAAkB,yCAAG,WAAMC,GAAN,iFACvBA,EAAMC,iBAEAC,EAAO,IAAIC,KAEXV,EAAc,CAEhBlB,MAAOA,EACP6B,iBAAkB3B,EAClB4B,UAAW,IAAIF,KAAKD,EAAO,KAAKI,eAAe,QAAQ,CAACC,UAAW,SAAUC,UAAW,WAGxF1B,GACAU,EAAQC,IAGTX,EAhBoB,qBAiBGA,EAAU2B,MAAK,SAACxB,GAAD,OAAWA,EAAMV,MAAMmC,gBAAkBnC,EAAMmC,aAA/C,IAjBlB,uBAmBfZ,GAAY,EAAO,+BAnBJ,0BAwBnBN,EAAQC,GAxBW,QA4BnBjB,EAAS,IACTE,EAAe,IA7BI,4CAAH,sDAoCxB,OACI,UAACd,EAAD,CAAmB+C,SAAUZ,EAA7B,WACG,SAAC,EAAAa,EAAD,CAAOvD,UAAQ,EAACH,KAAK,aAAaD,MAAM,QAAQ4D,YAAY,cAAclE,KAAK,OAAOQ,MAAOoB,EAAOnB,SA7EnF,SAAC4C,GACrBxB,EAASwB,EAAMc,OAAO3D,MACzB,KA4EG,SAAC,IAAD,CAAUE,UAAQ,EAACH,KAAK,mBAAmBD,MAAM,oBAAoB4D,YAAY,cAAclE,KAAK,OAAOQ,MAAOsB,EAAajB,KAAM,EAAGC,KAAM,GAAIC,QA1ExH,SAACsC,GAC/BtB,EAAesB,EAAMc,OAAO3D,MAC3B,KAyEG,UAACa,EAAD,YACA,SAACD,EAAD,WAAsB,SAACxB,EAAA,EAAD,CAAgBE,MAAM,SAACsE,EAAA,EAAD,IAAcpE,KAAK,SAAzC,6BACvB,SAACmB,EAAD,WAA8B,SAAC,EAAD,CAAiBI,QAASA,EAASC,QAASQ,WAWhF,ECxGD,EAXoC,WAGhC,OACI,SAAC,IAAD,WACI,SAACqC,EAAD,KAIX,C,qICXYC,EAAkB/E,EAAAA,GAAAA,IAAH,gNAGJG,EAAAA,EAAAA,KACXA,EAAAA,EAAAA,MAMAwB,EAAAA,EAAAA,QAKAqD,EAAyBhF,EAAAA,GAAAA,IAAH,gLAU1B2B,EAAAA,EAAAA,QAKIsD,EAAcjF,EAAAA,GAAAA,EAAH,0GAMXG,EAAAA,EAAAA,OAIA+E,EAA6BlF,EAAAA,GAAAA,IAAH,mIAG1B2B,EAAAA,EAAAA,OAKGxB,EAAAA,EAAAA,OAIHgF,EAAoBnF,EAAAA,GAAAA,EAAH,0MAGVG,EAAAA,EAAAA,UACNiF,EAAAA,EAIDjF,EAAAA,EAAAA,MAEJwB,EAAAA,EAAAA,Q,iDC5BT,EA9B+B,WAC/B,IAAMuB,GAAWC,EAAAA,EAAAA,MACPC,GAAWC,EAAAA,EAAAA,KACdL,GAAeH,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,IAAV,IAAnCD,YASH,OACI,SAAC+B,EAAD,WAEI,UAACC,EAAD,YACA,SAACE,EAAD,CAA4B1E,QAZP,WACzB4C,GAASiC,EAAAA,EAAAA,MACZ,EAUO,UACA,SAAC,IAAD,CAAmBC,SAAS,aAG7B,SAACL,EAAD,CAAazE,QAZE,WAClB0C,EAAS,IACZ,EAUM,yBAES,OAAXF,QAAW,IAAXA,OAAA,EAAAA,EAAauC,eAAgB,SAACJ,EAAD,iBAAoBnC,QAApB,IAAoBA,OAApB,EAAoBA,EAAauC,kBAOtE,E,oBCjCYC,EAAmBxF,EAAAA,GAAAA,IAAH,6ZAEhBG,EAAAA,EAAAA,MACWA,EAAAA,EAAAA,UAUV,SAAAF,GAAK,OAAIA,EAAMwF,KAAO,QAAU,MAA3B,GAEN9D,EAAAA,EAAAA,QAQA+D,EAAkB1F,EAAAA,GAAAA,IAAH,0QACZ,SAAAC,GAAK,OAAIA,EAAMwF,KAAO,QAAU,MAA3B,GAOItF,EAAAA,EAAAA,MAGfwB,EAAAA,EAAAA,QAOGgE,EAAe3F,EAAAA,GAAAA,GAAH,sKAUZ4F,EAAW5F,EAAAA,GAAAA,GAAH,wWAIGG,EAAAA,EAAAA,KACXA,EAAAA,EAAAA,MASeA,EAAAA,EAAAA,WASf0F,GAJU7F,EAAAA,GAAAA,KAAH,8BAIGA,EAAAA,GAAAA,EAAH,iE,8ECiCpB,EA/FiC,WAC7B,IAAO8F,GAAejD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMiD,EAAV,IAAnCD,YACP,GAA6BjD,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMG,IAAV,IAAnCD,GAAd,EAAOgD,OAAP,EAAchD,aAGRI,GAAWC,EAAAA,EAAAA,KACXH,GAAWC,EAAAA,EAAAA,MAEX8C,EAAuB,SAACC,GACtBhD,EAASgD,GACNC,OAAOC,WAAa,KAEnBhD,GAASiC,EAAAA,EAAAA,MAGpB,EAEKgB,EAAgB,yCAAG,oGAElBC,EAAAA,EAAAA,MAAwBC,MAAK,SAACC,GAEjC,IAAMxD,EAAc,CAChBU,IAAK8C,EAAIC,KAAK/C,IACd6B,YAAaiB,EAAIC,KAAKlB,YACtBmB,MAAOF,EAAIC,KAAKC,QAEpBC,EAAAA,EAAAA,IAAmB3D,GACnBI,GAASwD,EAAAA,EAAAA,IAAS5D,KAClB6D,EAAAA,EAAAA,IAAa7D,EAAYU,KAAK6C,MAAK,SAAAO,GACxCA,IACC1D,GAASI,EAAAA,EAAAA,IAAWsD,EAASC,YAC1BZ,OAAOC,WAAa,KAEnBhD,GAASiC,EAAAA,EAAAA,OAIL,GACP,IAAE2B,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACf,IAvBwB,2CAAH,qDA2BhBG,EAAiB,yCAAG,oGAChBC,EAAAA,EAAAA,KAAkBd,MAAK,WACzBnD,GAASkE,EAAAA,EAAAA,OACTlE,GAASmE,EAAAA,EAAAA,OACNpB,OAAOC,WAAa,KAEnBhD,GAASiC,EAAAA,EAAAA,MAEhB,IAAE2B,OAAM,SAACC,GAET,IAVqB,2CAAH,qDAmBvB,OACI,iCACA,SAACzB,EAAD,CAAkBC,KAAMK,EAAxB,UACI,UAACH,EAAD,YACA,UAACC,EAAD,CAAUpF,QAAS,kBAAMyF,EAAqB,IAA3B,EAAnB,WACQ,SAAC1F,EAAA,EAAD,CAAOA,MAAM,SAAC,IAAD,OACjB,SAACsF,EAAD,2BAGA,UAACD,EAAD,CAAUpF,QAAS,kBAAMyF,EAAqB,YAA3B,EAAnB,WACA,SAAC1F,EAAA,EAAD,CAAOA,MAAM,SAACiH,EAAA,EAAD,OACb,SAAC3B,EAAD,2BAGiB,OAAhB7C,GAAuB,UAAC4C,EAAD,CAAUpF,QAAS4G,EAAnB,WACxB,SAAC7G,EAAA,EAAD,CAAOA,MAAM,SAAC,IAAD,OACb,SAACsF,EAAD,0BACe,UAACD,EAAD,CAAUpF,QAAS6F,EAAnB,WACf,SAAC9F,EAAA,EAAD,CAAOA,MAAM,SAACkH,EAAA,EAAD,OACb,SAAC5B,EAAD,6BAOR,SAACH,EAAD,CAAiBlF,QA9BG,WACxB4C,GAASiC,EAAAA,EAAAA,MACZ,EA4BsDI,KAAMK,MAI5D,ECzGY4B,GAJoB1H,EAAAA,GAAAA,IAAH,8BAIEA,EAAAA,GAAAA,IAAH,gKAMhB2B,EAAAA,EAAAA,SAMAgG,EAAc3H,EAAAA,GAAAA,IAAH,qJACXG,EAAAA,EAAAA,MAKAwB,EAAAA,EAAAA,QCDb,EAhBmC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SACnC,OACC,iCACA,SAAC,EAAD,KACA,UAACoH,EAAD,YACA,SAAC,EAAD,KACA,SAACC,EAAD,UACCrH,SAOH,C,uDCvBD,IAAMsH,EAEM,QAFNA,EAGM,SAHNA,EAIO,SAGEjG,EAAS,CACpBkG,OAAO,eAAD,OAPE,QAOF,KACNC,OAAO,eAAD,OAAiBF,EAAjB,KACNG,OAAO,eAAD,OAAiBH,EAAjB,KACNI,QAAQ,eAAD,OAAiBJ,EAAjB,K,8ECTJ,IAAMzH,EAAY,CACrB8H,MAAO,OACPC,MAAO,OACPC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,UAAW,WACXC,KAAM,UACNC,SAAU,UACVC,UAAW,UACXC,MAAO,WAMExD,EAAY,SAACyD,GACtB,IAAIzD,EAYR,MAXqB,UAAlByD,IACHzD,EAAY,iDAIRA,EADiB,UAAlByD,EACa,kGAGA,oCAGTzD,CACN,C,0BChCG0D,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sDACD,SAEJN,EAAQ,EAAUG,C","sources":["components/button/ButtonWithIcon.styles.tsx","components/button/ButtonWithIcon.tsx","components/form/InputComponent.styles.tsx","components/form/InputComponent.tsx","components/icon/Icon.styles.tsx","components/icon/Icon.tsx","components/diary/NewDiary.styles.tsx","components/feedbackMessage/FeedBackMessage.styles.tsx","components/feedbackMessage/FeedbackMessage.tsx","components/diary/NewDiary.tsx","pages/addEntry/AddEntry.tsx","components/header/Header.styles.tsx","components/header/Header.tsx","components/sidebar/SideBar.styles.tsx","components/sidebar/SideBar.tsx","pages/styles.tsx","pages/index.tsx","styles/mediaquery.jsx","styles/variables.jsx","../node_modules/@mui/icons-material/Check.js"],"sourcesContent":["\n\nimport styled from 'styled-components'\nimport { variables } from '../../styles/variables'\n\ninterface ButtonPropsStyle {\n    color?: string\n}\n\nexport const ButtonWithIconContainer = styled.div<ButtonPropsStyle>`\n\ncursor: pointer;\nborder: none;\nborder-radius: 5px;\ncolor: ${ props => props.color === 'blue' ? variables.lightBlue : variables.white};\nbackground-color: ${ props => props.color === 'blue' ? variables.white : variables.lightBlue};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    padding: 7px;\ncursor: pointer;\n    transition: all ease-in-out .3s;\n\n    &:hover{\n        color: ${ props => props.color === 'blue' && variables.blue};\n        background-color: ${ props => props.color === 'blue' ? variables.white : variables.blue};\n    }\n`\n\nexport const ButtonText = styled.button<ButtonPropsStyle>`\n   \n    border: none;\n    padding: inherit;\n    outline: none;\n    background-color: inherit;\n   cursor: pointer;\n    color: ${ props => props.color === 'blue' ? variables.lightBlue : variables.white};\n    font-weight: ${ props => props.color === 'blue' ?  'bold': 'normal'}; ;\n`\n\n","import { FC, ReactNode } from \"react\";\nimport { ButtonText, ButtonWithIconContainer } from \"./ButtonWithIcon.styles\";\nimport Add from '@mui/icons-material/Add'\nimport { SvgIconProps,SvgIconTypeMap, } from \"@mui/material\";\n\ninterface IButtonWithIconProps{\nchildren: React.ReactNode,\nIcon?: React.ReactElement<SvgIconProps>,\nonClick?: React.MouseEventHandler<HTMLDivElement>,\ncolor?: string\ntype?: \"button\" | \"submit\" | \"reset\" | undefined\n}\n\nexport const ButtonWithIcon:FC<IButtonWithIconProps> = ({children,Icon,onClick,type,color}) => {\n    \nreturn (\n   \n   <ButtonWithIconContainer color={color} onClick={onClick}  >\n   {Icon}\n    <ButtonText color={color} type={type}>{children}</ButtonText>\n   </ButtonWithIconContainer>\n)\n}","import styled from \"styled-components\";\nimport { variables } from \"../../styles/variables\";\n\nexport const InputContainer = styled.div`\n    \n    width: 100%;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    gap: 10px;\n  \n`\n\nexport const InputLabel = styled.label`\n    text-align: start;\n    color: ${variables.lightBlue};\n \n`\n\nexport const InputText = styled.input`\nbackground-color: ${variables.darkGrey};\nborder: none;\n    outline: none;\n    border-radius: 10px;\n    color: ${variables.white};\n    padding: 20px;\n    &:focus-visible{\n        outline: none;\n    }\n`\n\nexport const TextAreaText = styled.textarea`\nbackground-color: ${variables.darkGrey};\nborder: none;\npadding: 20px;\nborder-radius: 10px;\ncolor: ${variables.white};\n    outline: none;\n\n    &:focus-visible{\n        outline: none;\n    }\n\n`","import { FC } from \"react\";\n\nimport { InputContainer, InputLabel, InputText, TextAreaText } from \"./InputComponent.styles\";\n\n\ninterface IInputprops {\nlabel?: string,\nname?: string,\ntype?: string,\nvalue?: string,\nonChange?: React.ChangeEventHandler<HTMLInputElement>,\nplaceholder?: string,\nrequired: boolean | undefined\n}\n\ninterface ITextAreaProps extends IInputprops {\nrows: number,\ncols: number,\nchanged: React.ChangeEventHandler<HTMLTextAreaElement>\n}\n\nexport const Input:FC<IInputprops> = ({label,name,type,value,onChange,required}) => {\n\n    return( <InputContainer>\n        <InputLabel htmlFor={name}>{label}  </InputLabel>\n        <InputText required={required} type={type} value={value} name={name} onChange={onChange}/>\n    </InputContainer>)\n}\n\nexport const TextArea:FC<ITextAreaProps> = ({label,name,rows,cols,value,changed,required}) => {\n    return(\n        <InputContainer>\n        <InputLabel htmlFor={name}>{label}</InputLabel>\n        <TextAreaText required={required} rows={rows} cols={cols} value={value} name={name} onChange={changed}/>\n        </InputContainer>\n    )\n}","import styled from 'styled-components'\nimport { variables } from '../../styles/variables'\n\nexport const IconsContainer = styled.div`\n    cursor: pointer;\n    svg{\n        fill: ${variables.white};\n        width: 25px;\n        height: 25px;\n    }\n`","import { FC } from \"react\";\nimport {SvgIconProps} from '@mui/material'\nimport { IconsContainer } from \"./Icon.styles\";\ninterface IIconProps {\n    Icon: React.ReactElement<SvgIconProps>\n    onClick?: React.MouseEventHandler<HTMLDivElement> \n}\nconst Icons:FC<IIconProps> = ({Icon,onClick}) => {\nreturn <IconsContainer onClick={onClick}>{Icon}</IconsContainer>\n\n}\n\nexport default Icons","import styled from \"styled-components\";\nimport { device } from \"../../styles/mediaquery\";\n\n\n\n\nexport const NewEntryContainer = styled.form`\n \n    \n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n\n    @media ${device.laptop}{\n\n    }\n\n    button{\n        float: right;\n    }\n`\n\nexport const FeedBackMessageFormContainer = styled.div`\nwidth: 100%;\nfloat: left;\nmargin: 0 auto;\n`\nexport const FormButttonContainer = styled.div`\n    width: max-content;\n`\n\nexport const FormButttonMessageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\nwidth: 100%;\ngap: 20px;\njustify-content: space-between;\nalign-content: center;\n\n    @media ${device.laptop}{\n   \n    }\n`\n\n\n","\nimport styled from \"styled-components\";\nimport { variables } from \"../../styles/variables\";\n\ninterface FeedbackMessageStyleProps{\n    success: boolean,\n    message: string\n}\n\nexport const FeedBackMessageContainer = styled.div<FeedbackMessageStyleProps>`\n  \n    background-color: ${props => props.success ? variables.green : variables.red};\n    display: ${props => props.message.length < 1 && 'none'};\n   \n    text-align: center;\n    \n  \n`\n\nexport const FeedBackMessageText = styled.h5`\n    color: ${variables.white};\n    padding: 15px\n`","import React, { FC, useEffect } from 'react'\nimport { FeedBackMessageContainer, FeedBackMessageText } from './FeedBackMessage.styles'\n\ninterface IFeedBackMessagProps {\n    message: string,\n    success: boolean \n}\n\nconst FeedbackMessage:FC<IFeedBackMessagProps> = ({message, success}) => {\n\n   \n    return (\n        <FeedBackMessageContainer success={success} message={message}>\n            <FeedBackMessageText>{message}</FeedBackMessageText>\n        </FeedBackMessageContainer>\n       ) \n}\n\nexport default FeedbackMessage","import React, { FC, useState } from \"react\";\nimport { ButtonWithIcon } from \"../button/ButtonWithIcon\";\nimport { Input, TextArea } from \"../form/InputComponent\";\nimport { FeedBackMessageFormContainer, FormButttonContainer, FormButttonMessageContainer, NewEntryContainer } from \"./NewDiary.styles\";\nimport CheckIcon from '@mui/icons-material/Check'\nimport { useAppDispatch,useAppSelector } from \"../hooks/storeHooks\";\nimport { AddToDiary } from \"../../store/diarySlice\";\nimport { addDiaryForUser, getDiaryInfo } from \"../../utils/firebaseUtil\";\n\nimport {useNavigate} from 'react-router-dom'\nimport FeedbackMessage from \"../feedbackMessage/FeedbackMessage\";\n\ninterface INewEntry {\n\n}\n\n\nconst NewEntry:FC<INewEntry> = () => {\n\n    const [title, setTitle] = useState<string>('')\n    const [description, setDescription] = useState<string>('')\n\n    const [feedBackMessage, setFeedBackMessage] = useState<string>('')\n    const [success, setSuccess] = useState<boolean >(false)\n\n    const {diaryData} = useAppSelector(state => state.diary)\n    const {userDetails} = useAppSelector(state => state.auth)\n\nconst navigate = useNavigate()\nconst dispatch = useAppDispatch()\n\n\n////////// Functions////////////\n    const getTitleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setTitle(event.target.value)\n    }\n\n    const getDescriptionHandler = (event:React.ChangeEvent<HTMLTextAreaElement> ) => {\n    setDescription(event.target.value)\n    }\n\n    const addUser = async(myDiaryData: {title: string, diaryDescription: string, diaryDate: string}) => {\n\n            if(!diaryData){\n              \n                dispatch(AddToDiary([myDiaryData]))\n                if(userDetails){\n                    addDiaryForUser(userDetails.uid,[myDiaryData])\n                  }\n            }\n            if(diaryData){\n              const updatedDiary = [\n                    ...diaryData,\n                    myDiaryData\n                ]\n            \n            dispatch(AddToDiary(updatedDiary))\n            if(userDetails){\n                addDiaryForUser(userDetails.uid,updatedDiary)\n              }\n         \n            }\n            navigate('/')\n            setFeedback(true, `Diary added!`)\n           \n    }\n\n    const setFeedback = (success: boolean, message: string) => {\n        setSuccess(success)\n        setFeedBackMessage(message)\n    }\n    \n    const submitInputHandler = async(event: React.FormEvent<HTMLFormElement>) => {\n        event.preventDefault()\n       \n        const date = new Date()\n        \n        const myDiaryData = {\n           \n            title: title,\n            diaryDescription: description,\n            diaryDate: new Date(date + 'Z').toLocaleString('en-US',{dateStyle: 'medium', timeStyle: 'short'})\n        }\n\n        if(!diaryData){\n            addUser(myDiaryData)\n        }\n\n        if(diaryData){\n            const existingDiary = diaryData.find((diary) => diary.title.toLowerCase() === title.toLowerCase())\n            if(existingDiary){\n                setFeedback(false, 'Diary title already created')\n           \n                return\n            }\n            \n            addUser(myDiaryData)\n                \n               \n            }\n            setTitle('')\n            setDescription('')\n        }\n        \n    \n\n  \n    \n    return (\n        <NewEntryContainer onSubmit={submitInputHandler}>\n           <Input required name=\"entryTitle\" label=\"Title\" placeholder=\"Diary Title\" type=\"text\" value={title} onChange={getTitleHandler}/>\n        <TextArea required name=\"entryDescription\" label=\"Diary Description\" placeholder=\"Diary Title\" type=\"text\" value={description} rows={6} cols={50} changed={getDescriptionHandler}/>\n        <FormButttonMessageContainer>\n        <FormButttonContainer><ButtonWithIcon Icon={<CheckIcon/>} type='submit'>Submit Diary</ButtonWithIcon></FormButttonContainer> \n       <FeedBackMessageFormContainer><FeedbackMessage success={success} message={feedBackMessage}/></FeedBackMessageFormContainer> \n       \n        </FormButttonMessageContainer>\n     \n       \n       \n\n\n        </NewEntryContainer>\n    )\n   \n}\n\nexport default NewEntry","import { FC } from \"react\";\nimport RootPage from \"..\";\nimport NewDiary from \"../../components/diary/NewDiary\";\n\ninterface IAddEntryProps{\n\n}\n\n\n\nconst AddEntry:FC<IAddEntryProps> = () => {\n\n\n    return (\n        <RootPage>\n            <NewDiary/>\n        </RootPage>\n        \n    )\n}\n\nexport default AddEntry","import styled from 'styled-components'\nimport { device } from '../../styles/mediaquery'\nimport { boxShadow, variables } from '../../styles/variables'\n\n\ninterface Iheaderprops {\n\n}\nexport const HeaderContainer = styled.div<Iheaderprops>`\n    margin-top: 0;\n    height: 74px;\n    background-color: ${variables.blue};\n    color: ${variables.white};\n    text-align: center;\n    padding:5px;\n   width: 100%;\n   \n    \n    @media ${device.laptop}{\n    \n    }\n`\n\nexport const HeaderContentContainer = styled.div`\n    display: flex;\npadding: 0 15px;\nheight: 100%;\n\njustify-content: space-between;\n\nalign-items: center;\nmargin: 0 auto;\n\n@media ${device.laptop}{\n    \n}\n`\n\nexport const HeaderTitle = styled.p`\nfont-size: 1.4rem;\nwidth: 100%;\ncursor: pointer;\n\n&:hover{\n    color: ${variables.white}\n}\n`\n\nexport const SideBarToggleIconContainer = styled.div`\n    cursor: pointer;\n\n    @media ${device.laptop}{\n     display: none;\n    }\n\n    svg{\n        fill: ${variables.white};\n    }\n`\n\nexport const UserNameContainer = styled.p`\ntext-transform: capitalize;\npadding: 10px;\nbackground-color: ${variables.lightBlue};\nbox-shadow: ${boxShadow};\nborder-radius: 10px;\nfont-weight: bold;\n&:hover{\n    color: ${variables.white}\n}\n@media ${device.laptop}{\n   \n}\n`","import { FC } from \"react\";\nimport { HeaderContainer, HeaderContentContainer, HeaderTitle, SideBarToggleIconContainer, UserNameContainer } from \"./Header.styles\";\nimport SideBarToggleIcon from '@mui/icons-material/Menu'\nimport {useNavigate} from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from \"../hooks/storeHooks\";\nimport { toggleSideBar } from \"../../store/UiSlice\";\ninterface HeaderProps {\n\n\n}\n\n\nconst Header:FC<HeaderProps> = () => {\nconst navigate = useNavigate()\n    const dispatch = useAppDispatch()\nconst {userDetails} = useAppSelector(state => state.auth)\n    const toggleSideBarHandler = () => {\n        dispatch(toggleSideBar())\n    }\n\n    const goHomeHandler = () => {\n        navigate('/')\n    }\n\n    return(\n        <HeaderContainer>\n\n            <HeaderContentContainer>\n            <SideBarToggleIconContainer onClick={toggleSideBarHandler}>\n            <SideBarToggleIcon fontSize=\"large\"/>\n            </SideBarToggleIconContainer>\n           \n           <HeaderTitle onClick={goHomeHandler}>Star Diary</HeaderTitle>\n\n        {userDetails?.displayName &&  <UserNameContainer>{userDetails?.displayName}</UserNameContainer>}\n          \n        \n            </HeaderContentContainer>\n          \n        </HeaderContainer>\n    )\n}\nexport default Header","import styled from 'styled-components'\nimport { device } from '../../styles/mediaquery'\nimport { variables } from '../../styles/variables'\n\ninterface styleProps {\n    show: boolean\n}\n\nexport const SidebarContainer = styled.div<styleProps>`\n    z-index: 99;\n    color: ${variables.white};\n    background-color: ${variables.darkGrey};\n    min-width: 250px;\n    max-width: 250px;\n    left: 0;\n    padding: 10px;\n    height: 100vh;\n    transform: translateX(0);\n    position: fixed;\n    top: 0;\n   \n   display: ${props => props.show ? 'block' : 'none'};\n \n    @media ${device.laptop}{\n        display: block;\n        height: 100%;\n        min-height: 100vh;\n        position: initial;\n     \n    }\n`\nexport const SideBarBackDrop = styled.div<styleProps>`\n     display: ${props => props.show ? 'block' : 'none'};\n     position: fixed;\n     top: 0;\n     right: 0;\n     left: 0;\n     bottom: 0;\n     z-index: 98;\n     background-color: ${variables.black};\n     opacity: .7;\n    width: 100%;\n @media ${device.laptop}{\n     display: none;\n     \n    \n }\n`\n\nexport const NavContainer = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n  \n    padding: 0;\n`\n\nexport const NavItems = styled.li`\n    padding: 20px;\n    width: 80%;\n    text-align: start;\n    background-color: ${variables.gray};\n    color: ${variables.white};\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    &:hover{\n        background-color: ${variables.lightBlue};\n     \n    }\n`\n\nexport const NavIcon = styled.span`\n    \n`\n\nexport const NavText = styled.a`\n    width: 100%;\n    font-size: 16px;\n`","import { FC } from \"react\";\nimport { NavContainer, NavIcon, NavItems, NavText, SideBarBackDrop, SidebarContainer } from \"./SideBar.styles\";\nimport AddIcon from '@mui/icons-material/Add'\nimport TimeLineIcon from '@mui/icons-material/Timeline'\nimport LoginIcon from '@mui/icons-material/Login'\nimport LogOutIcon from '@mui/icons-material/Logout'\nimport Icons from \"../icon/Icon\";\nimport {useNavigate} from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from \"../hooks/storeHooks\";\nimport { toggleSideBar } from \"../../store/UiSlice\";\nimport { createUserFromAuth, getDiaryInfo, googleSignInWithPopOp, signOutOfGoogle } from \"../../utils/firebaseUtil\";\nimport { authUser, logOutUser } from \"../../store/authSlice\";\nimport { AddToDiary, clearDairy } from \"../../store/diarySlice\";\ninterface SideBarProps {\n\n}\n\n\n\n\nconst SideBar:FC<SideBarProps> = () => {\n    const {showSideBar} = useAppSelector(state => state.ui)\n    const {isAuth,userDetails} = useAppSelector(state => state.auth)\n\n\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n\n    const sideBarActionHandler = (navLink: string) => {\n            navigate(navLink)\n            if(window.innerWidth < 992){\n                \n                dispatch(toggleSideBar())\n            }\n            \n    }\n\n    const logInUserHandler = async() => {\n\n     await googleSignInWithPopOp().then((res) => {\n        // console.log(res)\n        const userDetails = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email\n        }\n        createUserFromAuth(userDetails)\n        dispatch(authUser(userDetails))\n        getDiaryInfo(userDetails.uid).then(response => {\nif(response){\n    dispatch(AddToDiary(response.userDiary))\n    if(window.innerWidth < 992){\n                \n        dispatch(toggleSideBar())\n    }\n}\n           \n           })\n    }).catch(err => {\n        console.log(err)\n    })\n   \n    }\n\n    const logOutUserHandler = async() => {\n        await signOutOfGoogle().then(() => {\n            dispatch(logOutUser())\n            dispatch(clearDairy())\n            if(window.innerWidth < 992){\n                \n                dispatch(toggleSideBar())\n            }\n        }).catch((err) => {\n\n        })\n        \n    }\n\n\nconst closeSideBarHandler = () => {\n    dispatch(toggleSideBar())\n}\n \n    return (\n        <>\n        <SidebarContainer show={showSideBar} >\n            <NavContainer>\n            <NavItems onClick={() => sideBarActionHandler('/')}> \n                    <Icons Icon={<TimeLineIcon/>}/>\n                <NavText >Timeline</NavText>\n                </NavItems>\n                \n                <NavItems onClick={() => sideBarActionHandler('/addentry')}> \n                <Icons Icon={<AddIcon/>}/>\n                <NavText >New Diary</NavText>\n                </NavItems>\n\n                {userDetails !== null ? <NavItems onClick={logOutUserHandler}> \n                <Icons Icon={<LogOutIcon/>}/>\n                <NavText>Log out</NavText>\n                </NavItems> :  <NavItems onClick={logInUserHandler}> \n                <Icons Icon={<LoginIcon/>}/>\n                <NavText>Login</NavText>\n                </NavItems>}\n               \n\n            </NavContainer>\n       \n        </SidebarContainer>\n        <SideBarBackDrop onClick={closeSideBarHandler} show={showSideBar}/>\n        </>\n        \n    )\n}\n\nexport default SideBar","import styled  from \"styled-components\";\nimport { device } from \"../styles/mediaquery\";\nimport { variables } from \"../styles/variables\";\n\nexport const RootPageContainer = styled.div`\n    \n`\n\nexport const ContentContainer = styled.div`\n    \n    \n   width: 100%;\n    margin: 0 auto;\n\n    @media ${device.laptop}{\n        display: flex;\n    justify-content: space-between;\n    }\n`\n\nexport const MainContent = styled.div`\n    color: ${variables.white};\n  \n    margin: 30px;\n    transition: all ease-in-out .3s;\n\n    @media ${device.laptop}{\n        width: 100%;\n    }\n`","import React, { FC } from 'react'\nimport Header from '../components/header/Header'\nimport SideBar from '../components/sidebar/SideBar'\nimport { ContentContainer, MainContent } from './styles'\n\ninterface RootpageProps{\n    children: React.ReactNode\n}\n\nconst RootPage:FC<RootpageProps> = ({children}) => {\n  return (\n   <>\n   <Header />\n   <ContentContainer>\n   <SideBar/>\n   <MainContent>\n   {children}\n   </MainContent>\n  \n   </ContentContainer>\n   \n   </>\n  )\n}\n\nexport default RootPage","const size = {\n    mobile: '480px',\n    tablet: '768px',\n    laptop: ' 992px',\n    desktop: '1200px'\n  }\n\n  export const device = {\n    mobile: `(min-width: ${size.mobile})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    desktop: `(min-width: ${size.desktop})`,\n\n  };","\n\nexport const variables = {\n    white: '#fff',\n    black: '#000',\n    blue: '#02576e',\n    orange: '#ff944d',\n    yellow: '#ffb200',\n    purple: '#3c0263',\n    red: '#fa0000',\n    lightGray: '#edf0f6;',\n    gray: '#3b3b3b',\n    darkGrey: '#222222',\n    lightBlue: '#007da0',\n    green: '#005f00',\n\n\n    \n}\n\nexport const boxShadow = (boxShadowType ) => {\n    let boxShadow;\nif(boxShadowType === 'hover'){\nboxShadow = 'box-shadow: 0px 1px 7px -6px rgba(0,0,0,0.41)'\n\n}\nif(boxShadowType === 'inset'){\n    boxShadow=  'rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;'\n}\nelse{\n    boxShadow = '0px 2px 8px -5px rgba(0,0,0,0.41)'\n}\n\nreturn boxShadow\n}\n\n\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\n\nexports.default = _default;"],"names":["ButtonWithIconContainer","styled","props","color","variables","ButtonText","ButtonWithIcon","children","Icon","onClick","type","InputContainer","InputLabel","InputText","TextAreaText","Input","label","name","value","onChange","required","htmlFor","TextArea","rows","cols","changed","IconsContainer","NewEntryContainer","device","FeedBackMessageFormContainer","FormButttonContainer","FormButttonMessageContainer","FeedBackMessageContainer","success","message","length","FeedBackMessageText","useState","title","setTitle","description","setDescription","feedBackMessage","setFeedBackMessage","setSuccess","diaryData","useAppSelector","state","diary","userDetails","auth","navigate","useNavigate","dispatch","useAppDispatch","addUser","myDiaryData","AddToDiary","addDiaryForUser","uid","updatedDiary","setFeedback","submitInputHandler","event","preventDefault","date","Date","diaryDescription","diaryDate","toLocaleString","dateStyle","timeStyle","find","toLowerCase","onSubmit","I","placeholder","target","Check","NewDiary","HeaderContainer","HeaderContentContainer","HeaderTitle","SideBarToggleIconContainer","UserNameContainer","boxShadow","toggleSideBar","fontSize","displayName","SidebarContainer","show","SideBarBackDrop","NavContainer","NavItems","NavText","showSideBar","ui","isAuth","sideBarActionHandler","navLink","window","innerWidth","logInUserHandler","googleSignInWithPopOp","then","res","user","email","createUserFromAuth","authUser","getDiaryInfo","response","userDiary","catch","err","console","log","logOutUserHandler","signOutOfGoogle","logOutUser","clearDairy","Add","Login","ContentContainer","MainContent","size","mobile","tablet","laptop","desktop","white","black","blue","orange","yellow","purple","red","lightGray","gray","darkGrey","lightBlue","green","boxShadowType","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}