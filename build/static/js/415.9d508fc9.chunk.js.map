{"version":3,"file":"static/js/415.9d508fc9.chunk.js","mappings":"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","sources":["components/button/ButtonWithIcon.styles.tsx","components/button/ButtonWithIcon.tsx","components/icon/Icon.styles.tsx","components/icon/Icon.tsx","components/diary/DiaryList.styles.tsx","components/diary/DiaryList.tsx","components/diary/Diary.styles.tsx","components/diary/Diary.tsx","pages/home/styles.tsx","pages/home/index.tsx","components/header/Header.styles.tsx","components/header/Header.tsx","components/sidebar/SideBar.styles.tsx","components/sidebar/SideBar.tsx","pages/styles.tsx","pages/index.tsx","styles/mediaquery.jsx","styles/variables.jsx"],"sourcesContent":["\n\nimport styled from 'styled-components'\nimport { variables } from '../../styles/variables'\n\ninterface ButtonPropsStyle {\n    color?: string\n}\n\nexport const ButtonWithIconContainer = styled.div<ButtonPropsStyle>`\n\ncursor: pointer;\nborder: none;\nborder-radius: 5px;\ncolor: ${ props => props.color === 'blue' ? variables.lightBlue : variables.white};\nbackground-color: ${ props => props.color === 'blue' ? variables.white : variables.lightBlue};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    padding: 7px;\ncursor: pointer;\n    transition: all ease-in-out .3s;\n\n    &:hover{\n        color: ${ props => props.color === 'blue' && variables.blue};\n        background-color: ${ props => props.color === 'blue' ? variables.white : variables.blue};\n    }\n`\n\nexport const ButtonText = styled.button<ButtonPropsStyle>`\n   \n    border: none;\n    padding: inherit;\n    outline: none;\n    background-color: inherit;\n   cursor: pointer;\n    color: ${ props => props.color === 'blue' ? variables.lightBlue : variables.white};\n    font-weight: ${ props => props.color === 'blue' ?  'bold': 'normal'}; ;\n`\n\n","import { FC, ReactNode } from \"react\";\nimport { ButtonText, ButtonWithIconContainer } from \"./ButtonWithIcon.styles\";\nimport Add from '@mui/icons-material/Add'\nimport { SvgIconProps,SvgIconTypeMap, } from \"@mui/material\";\n\ninterface IButtonWithIconProps{\nchildren: React.ReactNode,\nIcon?: React.ReactElement<SvgIconProps>,\nonClick?: React.MouseEventHandler<HTMLDivElement>,\ncolor?: string\ntype?: \"button\" | \"submit\" | \"reset\" | undefined\n}\n\nexport const ButtonWithIcon:FC<IButtonWithIconProps> = ({children,Icon,onClick,type,color}) => {\n    \nreturn (\n   \n   <ButtonWithIconContainer color={color} onClick={onClick}  >\n   {Icon}\n    <ButtonText color={color} type={type}>{children}</ButtonText>\n   </ButtonWithIconContainer>\n)\n}","import styled from 'styled-components'\nimport { variables } from '../../styles/variables'\n\nexport const IconsContainer = styled.div`\n    cursor: pointer;\n    svg{\n        fill: ${variables.white};\n        width: 25px;\n        height: 25px;\n    }\n`","import { FC } from \"react\";\nimport {SvgIconProps} from '@mui/material'\nimport { IconsContainer } from \"./Icon.styles\";\ninterface IIconProps {\n    Icon: React.ReactElement<SvgIconProps>\n    onClick?: React.MouseEventHandler<HTMLDivElement> \n}\nconst Icons:FC<IIconProps> = ({Icon,onClick}) => {\nreturn <IconsContainer onClick={onClick}>{Icon}</IconsContainer>\n\n}\n\nexport default Icons","import styled from \"styled-components\";\nimport { boxShadow, variables } from \"../../styles/variables\";\n\n\n\nexport const DiaryListContainer= styled.div`\n    cursor: pointer;\n    margin: 15px auto;\n    border-radius: 5px;\n    box-shadow: ${boxShadow};\n    background-color: ${variables.darkGrey};\n    text-align: start;\n    display: flex;\n    padding: 15px;\n    flex-direction: column;\n    gap: 20px;\n    &:hover{\n        opacity: .8;\n    }\n\n`\n\nexport const DiaryListTitle  = styled.h4`\n    color: ${variables.white};\n    text-transform: capitalize;\n \n`\n\nexport const DiaryListDescription = styled.p`\ncolor: ${variables.white};\ntext-transform: capitalize;\n`\n\nexport const DateHeader = styled.h4`\n    \n    color: ${variables.lightBlue};\n  \n`","\nimport { DateHeader, DiaryListContainer, DiaryListDescription, DiaryListTitle } from \"./DiaryList.styles\"\n\nimport {useNavigate} from 'react-router-dom'\nimport { useAppDispatch } from \"../hooks/storeHooks\";\nimport { getSelectedDiary } from \"../../store/diarySlice\";\n\ninterface DiarylistProps{\n    content: {\n\n        title: string;\n        diaryDescription: string;\n        diaryDate: string;\n    }\n\n   \n}\nconst DiaryList:React.FC<DiarylistProps> = ({content}) => {\n    const dispatch = useAppDispatch()\n    const {title,diaryDescription,diaryDate} = content;\n \n    const navigate = useNavigate()\n    const goToDiaryHandler = () => {\n        dispatch(getSelectedDiary(content))\n\n        navigate(`/${title.split(' ').join('-')}`)\n    }\n\n    return(\n        <DiaryListContainer onClick={goToDiaryHandler}>\n            <DateHeader>{diaryDate}</DateHeader>\n            <DiaryListTitle>{title}</DiaryListTitle>\n            <DiaryListDescription>{diaryDescription.substring(0, 50)}</DiaryListDescription>\n        </DiaryListContainer>\n    )\n}\n\nexport default DiaryList","import styled from \"styled-components\";\nimport { device } from \"../../styles/mediaquery\";\nimport { variables } from \"../../styles/variables\";\n\n\n\nexport const DiaryContainer = styled.div`\n     color: ${variables.white};\n\n`\n\nexport const EntryPlaceholder = styled.div`\n   color: ${variables.lightBlue};\n   font-weight: bold;\n`\nexport const AddEntry = styled.div`\n    position: sticky;\n    bottom: 8%;\n    margin-right: 20px;\n    margin-top: 20px;\n\n   width: max-content;\nfont-size: 16px;\n   text-align: -webkit-right;\nfloat: right;\n\n \n`","import React from 'react'\nimport AddIcon from '@mui/icons-material/Add'\nimport { ButtonWithIcon } from \"../../components/button/ButtonWithIcon\";\nimport {  useAppSelector } from \"../../components/hooks/storeHooks\";\nimport {useNavigate} from 'react-router-dom'\nimport DiaryList from \"../../components/diary/DiaryList\";\nimport { AddEntry, DiaryContainer, EntryPlaceholder } from './Diary.styles';\n\n\n\nconst Diary = () => {\n\n    const {diaryData} = useAppSelector(state => state.diary)\n\n    const navigate = useNavigate()\n\n    const addEntryHandler = () => {\n        navigate('/addentry')\n}\n\n\n\n  return (\n    <DiaryContainer>\n<EntryPlaceholder>Entries</EntryPlaceholder>\n{diaryData ? diaryData.map(content => {\n    return <DiaryList key={content.title} content={content} />\n}) :  <p>Start adding your first diary</p>}\n<AddEntry>\n <ButtonWithIcon onClick={addEntryHandler} Icon={<AddIcon/>}>Add Entry</ButtonWithIcon>\n    </AddEntry>\n    </DiaryContainer>\n  )\n}\n\nexport default Diary","import styled from 'styled-components'\nimport { device } from '../../styles/mediaquery'\nimport { variables } from '../../styles/variables'\n\nexport const HomeComponent = styled.div`\n    \n   \n`\n\n\n\n\n\n","import { FC, useEffect, useState } from \"react\";\nimport RootPage from \"..\";\nimport Diary from \"../../components/diary/Diary\";\n\nimport { HomeComponent } from \"./styles\";\n\nconst Home:FC = () => {\n\n\n\n    return(\n        <RootPage>\n <HomeComponent>\n        <Diary/>\n</HomeComponent>\n        </RootPage>\n      \n    )\n}\n\nexport default Home","import styled from 'styled-components'\nimport { device } from '../../styles/mediaquery'\nimport { boxShadow, variables } from '../../styles/variables'\n\n\ninterface Iheaderprops {\n\n}\nexport const HeaderContainer = styled.div<Iheaderprops>`\n    margin-top: 0;\n    height: 74px;\n    background-color: ${variables.blue};\n    color: ${variables.white};\n    text-align: center;\n    padding:5px;\n   width: 100%;\n   \n    \n    @media ${device.laptop}{\n    \n    }\n`\n\nexport const HeaderContentContainer = styled.div`\n    display: flex;\npadding: 0 15px;\nheight: 100%;\n\njustify-content: space-between;\n\nalign-items: center;\nmargin: 0 auto;\n\n@media ${device.laptop}{\n    \n}\n`\n\nexport const HeaderTitle = styled.p`\nfont-size: 1.4rem;\nwidth: 100%;\ncursor: pointer;\n\n&:hover{\n    color: ${variables.white}\n}\n`\n\nexport const SideBarToggleIconContainer = styled.div`\n    cursor: pointer;\n\n    @media ${device.laptop}{\n     display: none;\n    }\n\n    svg{\n        fill: ${variables.white};\n    }\n`\n\nexport const UserNameContainer = styled.p`\ntext-transform: capitalize;\npadding: 10px;\nbackground-color: ${variables.lightBlue};\nbox-shadow: ${boxShadow};\nborder-radius: 10px;\nfont-weight: bold;\n&:hover{\n    color: ${variables.white}\n}\n@media ${device.laptop}{\n   \n}\n`","import { FC } from \"react\";\nimport { HeaderContainer, HeaderContentContainer, HeaderTitle, SideBarToggleIconContainer, UserNameContainer } from \"./Header.styles\";\nimport SideBarToggleIcon from '@mui/icons-material/Menu'\nimport {useNavigate} from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from \"../hooks/storeHooks\";\nimport { toggleSideBar } from \"../../store/UiSlice\";\ninterface HeaderProps {\n\n\n}\n\n\nconst Header:FC<HeaderProps> = () => {\nconst navigate = useNavigate()\n    const dispatch = useAppDispatch()\nconst {userDetails} = useAppSelector(state => state.auth)\n    const toggleSideBarHandler = () => {\n        dispatch(toggleSideBar())\n    }\n\n    const goHomeHandler = () => {\n        navigate('/')\n    }\n\n    return(\n        <HeaderContainer>\n\n            <HeaderContentContainer>\n            <SideBarToggleIconContainer onClick={toggleSideBarHandler}>\n            <SideBarToggleIcon fontSize=\"large\"/>\n            </SideBarToggleIconContainer>\n           \n           <HeaderTitle onClick={goHomeHandler}>Star Diary</HeaderTitle>\n\n        {userDetails?.displayName &&  <UserNameContainer>{userDetails?.displayName}</UserNameContainer>}\n          \n        \n            </HeaderContentContainer>\n          \n        </HeaderContainer>\n    )\n}\nexport default Header","import styled from 'styled-components'\nimport { device } from '../../styles/mediaquery'\nimport { variables } from '../../styles/variables'\n\ninterface styleProps {\n    show: boolean\n}\n\nexport const SidebarContainer = styled.div<styleProps>`\n    z-index: 99;\n    color: ${variables.white};\n    background-color: ${variables.darkGrey};\n    min-width: 250px;\n    max-width: 250px;\n    left: 0;\n    padding: 10px;\n    height: 100vh;\n    transform: translateX(0);\n    position: fixed;\n    top: 0;\n   \n   display: ${props => props.show ? 'block' : 'none'};\n \n    @media ${device.laptop}{\n        display: block;\n        height: 100%;\n        min-height: 100vh;\n        position: initial;\n     \n    }\n`\nexport const SideBarBackDrop = styled.div<styleProps>`\n     display: ${props => props.show ? 'block' : 'none'};\n     position: fixed;\n     top: 0;\n     right: 0;\n     left: 0;\n     bottom: 0;\n     z-index: 98;\n     background-color: ${variables.black};\n     opacity: .7;\n    width: 100%;\n @media ${device.laptop}{\n     display: none;\n     \n    \n }\n`\n\nexport const NavContainer = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n  \n    padding: 0;\n`\n\nexport const NavItems = styled.li`\n    padding: 20px;\n    width: 80%;\n    text-align: start;\n    background-color: ${variables.gray};\n    color: ${variables.white};\n    font-weight: bold;\n    cursor: pointer;\n    border-radius: 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    &:hover{\n        background-color: ${variables.lightBlue};\n     \n    }\n`\n\nexport const NavIcon = styled.span`\n    \n`\n\nexport const NavText = styled.a`\n    width: 100%;\n    font-size: 16px;\n`","import { FC } from \"react\";\nimport { NavContainer, NavIcon, NavItems, NavText, SideBarBackDrop, SidebarContainer } from \"./SideBar.styles\";\nimport AddIcon from '@mui/icons-material/Add'\nimport TimeLineIcon from '@mui/icons-material/Timeline'\nimport LoginIcon from '@mui/icons-material/Login'\nimport LogOutIcon from '@mui/icons-material/Logout'\nimport Icons from \"../icon/Icon\";\nimport {useNavigate} from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from \"../hooks/storeHooks\";\nimport { toggleSideBar } from \"../../store/UiSlice\";\nimport { createUserFromAuth, getDiaryInfo, googleSignInWithPopOp, signOutOfGoogle } from \"../../utils/firebaseUtil\";\nimport { authUser, logOutUser } from \"../../store/authSlice\";\nimport { AddToDiary, clearDairy } from \"../../store/diarySlice\";\ninterface SideBarProps {\n\n}\n\n\n\n\nconst SideBar:FC<SideBarProps> = () => {\n    const {showSideBar} = useAppSelector(state => state.ui)\n    const {isAuth,userDetails} = useAppSelector(state => state.auth)\n\n\n    const dispatch = useAppDispatch()\n    const navigate = useNavigate()\n\n    const sideBarActionHandler = (navLink: string) => {\n            navigate(navLink)\n            if(window.innerWidth < 992){\n                \n                dispatch(toggleSideBar())\n            }\n            \n    }\n\n    const logInUserHandler = async() => {\n\n     await googleSignInWithPopOp().then((res) => {\n        // console.log(res)\n        const userDetails = {\n            uid: res.user.uid,\n            displayName: res.user.displayName,\n            email: res.user.email\n        }\n        createUserFromAuth(userDetails)\n        dispatch(authUser(userDetails))\n        getDiaryInfo(userDetails.uid).then(response => {\nif(response){\n    dispatch(AddToDiary(response.userDiary))\n    if(window.innerWidth < 992){\n                \n        dispatch(toggleSideBar())\n    }\n}\n           \n           })\n    }).catch(err => {\n        console.log(err)\n    })\n   \n    }\n\n    const logOutUserHandler = async() => {\n        await signOutOfGoogle().then(() => {\n            dispatch(logOutUser())\n            dispatch(clearDairy())\n            if(window.innerWidth < 992){\n                \n                dispatch(toggleSideBar())\n            }\n        }).catch((err) => {\n\n        })\n        \n    }\n\n\nconst closeSideBarHandler = () => {\n    dispatch(toggleSideBar())\n}\n \n    return (\n        <>\n        <SidebarContainer show={showSideBar} >\n            <NavContainer>\n            <NavItems onClick={() => sideBarActionHandler('/')}> \n                    <Icons Icon={<TimeLineIcon/>}/>\n                <NavText >Timeline</NavText>\n                </NavItems>\n                \n                <NavItems onClick={() => sideBarActionHandler('/addentry')}> \n                <Icons Icon={<AddIcon/>}/>\n                <NavText >New Diary</NavText>\n                </NavItems>\n\n                {userDetails !== null ? <NavItems onClick={logOutUserHandler}> \n                <Icons Icon={<LogOutIcon/>}/>\n                <NavText>Log out</NavText>\n                </NavItems> :  <NavItems onClick={logInUserHandler}> \n                <Icons Icon={<LoginIcon/>}/>\n                <NavText>Login</NavText>\n                </NavItems>}\n               \n\n            </NavContainer>\n       \n        </SidebarContainer>\n        <SideBarBackDrop onClick={closeSideBarHandler} show={showSideBar}/>\n        </>\n        \n    )\n}\n\nexport default SideBar","import styled  from \"styled-components\";\nimport { device } from \"../styles/mediaquery\";\nimport { variables } from \"../styles/variables\";\n\nexport const RootPageContainer = styled.div`\n    \n`\n\nexport const ContentContainer = styled.div`\n    \n    \n   width: 100%;\n    margin: 0 auto;\n\n    @media ${device.laptop}{\n        display: flex;\n    justify-content: space-between;\n    }\n`\n\nexport const MainContent = styled.div`\n    color: ${variables.white};\n  \n    margin: 30px;\n    transition: all ease-in-out .3s;\n\n    @media ${device.laptop}{\n        width: 100%;\n    }\n`","import React, { FC } from 'react'\nimport Header from '../components/header/Header'\nimport SideBar from '../components/sidebar/SideBar'\nimport { ContentContainer, MainContent } from './styles'\n\ninterface RootpageProps{\n    children: React.ReactNode\n}\n\nconst RootPage:FC<RootpageProps> = ({children}) => {\n  return (\n   <>\n   <Header />\n   <ContentContainer>\n   <SideBar/>\n   <MainContent>\n   {children}\n   </MainContent>\n  \n   </ContentContainer>\n   \n   </>\n  )\n}\n\nexport default RootPage","const size = {\n    mobile: '480px',\n    tablet: '768px',\n    laptop: ' 992px',\n    desktop: '1200px'\n  }\n\n  export const device = {\n    mobile: `(min-width: ${size.mobile})`,\n    tablet: `(min-width: ${size.tablet})`,\n    laptop: `(min-width: ${size.laptop})`,\n    desktop: `(min-width: ${size.desktop})`,\n\n  };","\n\nexport const variables = {\n    white: '#fff',\n    black: '#000',\n    blue: '#02576e',\n    orange: '#ff944d',\n    yellow: '#ffb200',\n    purple: '#3c0263',\n    red: '#fa0000',\n    lightGray: '#edf0f6;',\n    gray: '#3b3b3b',\n    darkGrey: '#222222',\n    lightBlue: '#007da0',\n    green: '#005f00',\n\n\n    \n}\n\nexport const boxShadow = (boxShadowType ) => {\n    let boxShadow;\nif(boxShadowType === 'hover'){\nboxShadow = 'box-shadow: 0px 1px 7px -6px rgba(0,0,0,0.41)'\n\n}\nif(boxShadowType === 'inset'){\n    boxShadow=  'rgba(50, 50, 93, 0.25) 0px 30px 60px -12px inset, rgba(0, 0, 0, 0.3) 0px 18px 36px -18px inset;'\n}\nelse{\n    boxShadow = '0px 2px 8px -5px rgba(0,0,0,0.41)'\n}\n\nreturn boxShadow\n}\n\n\n"],"names":["ButtonWithIconContainer","styled","props","color","variables","ButtonText","ButtonWithIcon","children","Icon","onClick","type","IconsContainer","DiaryListContainer","boxShadow","DiaryListTitle","DiaryListDescription","DateHeader","content","dispatch","useAppDispatch","title","diaryDescription","diaryDate","navigate","useNavigate","getSelectedDiary","split","join","substring","DiaryContainer","EntryPlaceholder","AddEntry","diaryData","useAppSelector","state","diary","map","Add","HomeComponent","HeaderContainer","device","HeaderContentContainer","HeaderTitle","SideBarToggleIconContainer","UserNameContainer","userDetails","auth","toggleSideBar","fontSize","displayName","SidebarContainer","show","SideBarBackDrop","NavContainer","NavItems","NavText","showSideBar","ui","isAuth","sideBarActionHandler","navLink","window","innerWidth","logInUserHandler","googleSignInWithPopOp","then","res","uid","user","email","createUserFromAuth","authUser","getDiaryInfo","response","AddToDiary","userDiary","catch","err","console","log","logOutUserHandler","signOutOfGoogle","logOutUser","clearDairy","Login","ContentContainer","MainContent","size","mobile","tablet","laptop","desktop","white","black","blue","orange","yellow","purple","red","lightGray","gray","darkGrey","lightBlue","green","boxShadowType"],"sourceRoot":""}